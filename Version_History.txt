====================================================================================================
                                    ~ ~ ~ VERSION HISTORY ~ ~ ~
====================================================================================================

July 29, 2015:
	- Replaced level select screen with a centralized hub world:
		+ Main menu's level select button replaced with possibly temporary "Play" button.
		+ Upon level completion, "Next" returns you to the hub world.
		+ Added portals to the existing levels to the hub world.
	- Refactoring and back-end changes:
		+ Added time management class that can perform actions after a set time has passed.
		+ Replaced hard-coded game states with a "sequence" of events; presence/absence of game objects affects game flow.
			* Consequently, debug menu can no longer control game states.
			* For most levels, this is the current sequence (priority indicates ordering):
				~ Pan screen activates (Priority 100)
					> Deactivates when Space/Escape are pressed.
				~ Main HUD is enabled (Priority 199)
				~ Countdown begins (Priority 200)
					> When countdown ends, marble is released and level timer starts.
		+ Further split HUD/GUI elements so they handle tasks independently, and only if relevant game objects are present.
			* Countdown is handled by own script and is triggered by the spawn pad.
			* Win and death screens are now a unified Tint Screen that can be used to flexibly tint in many situations.
		+ Marble now has functional potential to hold any number of buffs on backup. HUD does not yet reflect this functionality.
		+ Added third-party Unique ID script in preparation for proper saving/loading of some level objects (namely balloons).
		+ Charm Points have been renamed to "Charm Capacity", due to the former's offensive abbreviation.
	- New issue to be addressed:
		+ Pan cam behavior is inconsistent; sometimes it acts like it should, other times it doesn't.
		
June 29, 2015:
	- Overhaul:
		+ Updated project to Unity 5.1. You will need to update before opening Marballs.
		+ Added RPG elements - Health (HP), Marble Power (MP), Charm Points (CP), etc.
			* HP works as expected; marble takes damage, it loses health. At 0 it dies. Can be increased by 5 upon leveling.
				~ Damage is taken from the new HitBox class. It's like a killzone, but less lethal.
			* MP is like mana; expend it to use special abilities. Can be increased by 5 upon leveling.
			* CP is the capacity to add charms. Charms modify marble features and can grant abilities. Can be increased by 3 upon leveling.
				~ Currently existing charms (for testing/later rebalancing):
					> Power Dash: Grants a dashing ability that provides instant speed bursts. Costs 1 MP to use.
					> Steadfast: Increases marble's defense by 1, reducing damage to HP.
					> Recharge: Gradually restores MP.
					> Craftsmanship: Increases max HP by 5. (Does not increase current HP)
					> Bomb: Grants explosion ability, damaging and/or flinging anything within range with relevant components. Costs 2 MP to use.
			* Added a little support for leveling up. (Experience and level variables have been added, but no actual functions.)
				~ Balloons may be a future source of experience for leveling up.
		+ Revised HUD.
			* New status bar that displays HP, MP, time taken, and the powerup box.
				~ Elements blink when updated.
			* Overview cam has been replaced by ability box, used to show the active ability and scroll through them.
				~ Abilities darken when cooling down.
			* In-game menu that can be used to view and equip charms.
			* Control menu now swaps attempted duplicate keys, rather than setting the old one to null.
		+ New controls:
			* Tab to use the active special ability.
			* Q and E to cycle through special abilities if there is more than one.
			* V to open in-game menu.
		+ Added game settings object.
			* Stores many of the variables the Game Master did previously.
			* Audio controls: master, music, and sound effects volumes.
			* No in-game menu for these options currently. (Except debug menu)
		+ Added models for possible future enemies. Functionality not yet implemented.
			* Pig: Minds its own business, but tries to ram player if they get too close.
			* Cannon Turtle: Turtle with a cannon bolted to its back. Turtle meanders aimlessly while cannon tries to fire.
		+ Level tweaks.
			* Final multijump level checkpoint moved onto elevator.
			* Helilevel cannon toned down, because it became extra powerful for some reason.
		+ Multiplayer temporarily scrapped.
			* Unity 5.1 updated networking code, rendering our multiplayer code obsolete.
		+ Significant amount of refactoring.
			* Added free-to-use messaging system class that enables script-to-script communication without actually knowing about the other script.
			* Split up Game Master to be less all-knowing:
				~ Most relevant classes now manage as much as possible on their own.
			+ Split up HUD; most individual HUD elements now manage themselves.
			+ Level music now maintained by Music Manager.
			+ Powerups are now placed into "slots" to allow future support for holding more powerups easily.
			+ Marble's movement functions have been split into a new sibling class.
				~ Marble now has getters and setters, which the powerup scripts have been updated to use.
			
May 12, 2015:
	- Kyle did some more things:
		+ Secret level is now a full scale level, with difficulty suiting the secret.
		+ Multijump level has new, original music, courtesy of a friend.
		+ Multiplayer spawning positions now differentiate players on the same IP.
		+ Multiplayer cam resets position on respawn.

May 10, 2015:
	- Kyle made various tweaks and additions:
		+ Every level now has collectable balloons which only serve to help guide the player.
			* Every level now also has an exceptionally hard to reach Golden Balloon that may give a reward in the future.
		+ Multiplayer now has a proper beta connection window, along with usernames and randomly-colored marbles.
		+ Multiplayer collisions now behave somewhat differently due to unforeseen issues:
			* Head-on collisions will behave as expected.
			* Collisions with sides ("sideswipe") will cause the aggressor to accelerate away.
		+ Fixed Level 3 kill zone size and added disco finish.
		+ Decreased volume of countdown sounds.
		+ [WIP] Secret level from Level 2 may involve a balloon-themed obstacle course.

May 8, 2015:
	- Kyle updated level select menu with level screenshots and made multiplayer collisions explosive.
	- Level 3 was straightened out.
	- Brenton, Chris, and Kyle added thematically appropriate placeholder music to the levels.
	- Brenton, Chris, Kyle, and Charlie created the poster for the presentation.

May 7, 2015:
	- Charlie tweaked the controls menu to try to fix a display issue.

May 6, 2015:
	- Kyle polished some features and added very basic multiplayer:
		+ Main menu now has all 8 existing levels.
		+ Platforms on Super Jump level are now clouds.
		+ Currently objectiveless, stripped down multiplayer in weird sumo ring.
		+ Reorganized files to make building the executable faster.

May 5, 2015:
	- Kyle modified and fleshed out the size change level a bit.

May 4, 2015:
	- Charlie added a prototype size change level.

May 1, 2015:
	- Brenton modified spike ball texture and added helihat model.
	- Charlie and Kyle modified size change mechanics to allow big ball to do useful things.
	- Kyle added helihat functionality, and changed wonky rotation scheme on buff source badges.

April 30, 2015:
	- Kyle fleshed out the Heliball level and tweaked things along the way:
		+ Heliball level is now volcanically themed.
		+ There is now a beginning area to acquaint the player with the powerup slowly.
		+ Flaming boulders.

April 29, 2015:
	- Charlie added spike ball obstacles to the Heliball level.
	- Brenton and Chris added music to the main menu.

April 28, 2015:
	- Kyle polished the camera and added optional smoothing.

April 27, 2015:
	- Jacob updated the original powerup badges and added the beginnings of the growth badge.
	- Chris updated/added better marble sounds.
	- Kyle modified and implemented some stuff:
		+ Multijump level's height was halved.
		+ Multijump, itself, now gives more height to the directional jumps.
		+ Added checkpoint functionality and sprinkled a few amongst the levels.
		+ Restructured debug menu and added more options.
		+ Substituted original camera script with offset vector version.

April 26, 2015:
	- Kyle tweaked and added more things:
		+ Added candidate Multijump tutorial level.
		+ Added poppable/collectable balloons to small test level.
		+ Added two experimental camera alternatives:
			* Camera that doesn't rely on spherical position calculations, just manipulating an offset vector.
				~ Allows easy upward rotation of camera when obstructed, otherwise identical if not more efficient.
			* Camera that mainly relies on Rigidbody and spring components to get around.
				~ Unorthodox movement, but follows player's direction of velocity.

April 22, 2015:
	- Brenton added textures and additional helisources to the heliball level.
	- Chris made the overview cam more reliable through raycasting.
	- Charlie refactored level select buttons to simpler functionality.
	- Kyle added a new death animation, a moving boulder hazard, and some tweaks behind the scenes.

April 21, 2015:
	- Kyle flushed out implementation of pre-level panning and threw in a couple other features:
		+ Now displays high scores, level name, and text indicating how to go back or start.
		+ Every level now has the panning.
		+ Added bird's eye view minimap to lower right corner. Centered tip area window to fit it in.
		+ Debug menu is now collapseable.
		+ Main menu's level select screen now displays pictures and high scores.

April 20, 2015:
	- Charlie, Kyle, and Chris added rough implementation of pre-level panning.

April 19, 2015:
	- Brenton tweaked the Heliball level.
	- Kyle added and tweaked several features:
		+ Imported Unity's "Image Effects" standard assets to allow interesting rendering effects.
		+ Debug god mode buff. (allows unlimited flight and unrestricted movement in air)
		+ Multijump now has directional influence for jumping. Unintended side effect/feature is speed boosts while jumping.
		+ Marble's shadow now uses a projector instead. Shadow always points downwards now as a result.
		+ Save data is now done per level, and holds the player's top 5 best times.
		+ Added a script for predetermined paths, which can be used for panning the camera.
		+ Added more level-specific victory and death messages.
		+ Experimental buttons for the main menu, heading towards dynamically addable buttons.
		+ Occlusion culling possibly added to ghost level? Maybe? I think?
		+ Jerry got scarier.

April 16, 2015:
	- Charlie fixed issues with the key rebinding script.
	- Kyle changed and implemented some things:
		+ Added support for saving and loading player's best times, and a small portion of the HUD to display them.
		+ Individual levels can have properties modified in the editor, like difficulty ratings and custom messages.
		+ Fixed and simplified jumping mechanics to be significantly more consistent.
		+ Added a "Marballs" menu in the editor's menu bar, along with a level creation tool under it.
		+ Minor tweaks to multiple levels and scripts.

April 15, 2015:
	- Charlie updated the Super Jump tutorial level to be fully playable now.
		+ Kyle fixed first S-Jump source's badge rotation and changed sun angle to give more helpful shadows.
	- Brenton added a prototype of the Heliball tutorial level.
	- Kyle updated the ghost level so that the dozens of lights are not active simultaneously.
		+ The script created to do that can be used to enable/disable anything with a trigger.

April 14, 2015:
	- Charlie fully implemented the key rebinding script and the controls menu.

April 13, 2015:
	- Kyle modified a few things based on feedback:
		+ Ghost level has more lights, obstacle course platforms widened, foyer buff duration extended.
			* Jerry now constantly updates his y-coordinate to match the player's.
		+ Rough implementation of camera autorotation: moves (jitters) up when stuck against a wall now.
		+ Finish line now has the option to use an invisible black hole as its animation.

April 12, 2015:
	- Kyle added various tweaks and features:
		+ Updated finish line prefab to include Brentoncloth.
		+ Crudely implemented some of Chris's sounds, and added a few more.
		+ Added some modular/simple scripts for teleporting, adjusting rotation, and making textures slide.
		+ Added mockup for some sort of ghost level.
			* Added demonic ghost entity, nicknamed Jerry.

April 10, 2015:
	- Brenton gave life to the finish line cloth.
	- Chris added various sounds for a variety of situations.

April 9, 2015:
	- Kyle refactored, cleaned, improved, and implemented some code:
		+ Objects can now more easily add functionality to GameMaster's OnStart, OnPlay, and OnWin functions.
		+ Fixed key rebinding script to properly allow mouse input. Still does not properly detect the shift key.
		+ Added unpolished generic gravity zone script to allow different areas to exert different forces.
		
April 8, 2015:
	- Charlie implemented beginning functionality of key rebinding script.

April 6, 2015:
	- Brenton updated the funnel.
	- Charlie and Kyle implemented the functionality of the hover/heliball buff.
	- Kyle added ghostly objects that are only solid while ghosting. Also significantly upgraded ghost scripts.
	- Kyle added highly flexible tip spots that can be dragged onto a scene to give a player information.

April 3, 2015:
	- Kyle attempted to clean up the project.
	- Ghostable objects are now truly selectively permeable: nothing but the marble will get through.
	- Test level now has the following extra features:
		+ Black hole and a runway of anchored springy cylinders
		+ Ghost source and a ghostable wall, with a lil rigidcube for experimenting.
		+ Optional big screen TV.

April 2, 2015:
	- Jacob added a number of new assets and modified existing ones
		+ Power up badges (speed, ghost, generic)
			* Modelled and textured, not animated
		+ Reusable stage models:
			* Start platform
			* Straight platforms (short, mid, long)
			* Hard turn platforms (left and right)
			* Straight half-pipe path
		+ Fixed stage 2 center piece (was floating just above the stage)

April  1, 2015:
	- Charlie, Chris, and Kyle fixed a lighting issue on two levels.
	- Brenton added a funnel model and updated the spawn point model.
	- Kyle implemented a couple new features:
		+ Randomized death/win messages.
		+ Ghost powerup and its functionality.
		+ New level hazard: black hole.
		+ Silly sound for victory explosion.
	
March 31, 2015:
	- Kyle refactored marble and powerup code for extendability. Then extended it.
		+ Powerups can now completely overwrite marble's jumping and movement mechanics.
		+ Powerups can now disappear when collected, and will respawn when used up.

March 30, 2015:
	- Charlie added a prototype super jump tutorial level.
	- Charlie, Kyle, and Chris modified jumping so that powerups could change jumping trigger conditions.
		
March 26, 2015:
	- Kyle added a candidate speed boost tutorial level.

March 25, 2015:
	- Charlie added beginnings of Heliball powerup.
		+ Currently when active, marble falls more slowly.
	- Charlie and Kyle fixed some issues with jumping mechanics.
		+ Marble may now keep jumping automatically if the jump key is held down.
		+ There is a barely noticeable cooldown after standard jumping to restrict multijump.
		+ Fringe issues:
			* Marble may be unable to jump in some cases if it perfectly skids down wall and lands on floor if both share a collider.
			* If marble is in midair without having jumped first, the player gets an extra jump. Could be a feature?

March 24, 2015:
	- Kyle added a pointer to the finish line and revamped buff code.
		+ Adding new buffs should be easier.
		+ Can now hold on to buffs. Press F to use them.
		+ Multijump is now usable in midair, and has a source on the test level.

March 23, 2015:
	- Charlie, Chris, and Kyle added an indicator to the finish line that is visible at all times.
		
March 22, 2015:
	- Kyle cleaned some code, made some features less buggy, and added more debug options.
		+ Replaced debug state buttons with toggles that both display the current state and allow it to be changed.
		+ Added a debug slider for viewing the game at different framerates.
		+ Added an alternate, less intense victory animation for quicker debugging and playtesting.
		+ Added a debug cheaty "win" button.
		+ Made movement and some animations framerate independent.
			* Level 1 should now always be completable in just about 3 seconds regardless of machine.
		+ Imported some Unity standard effect assets; can add nifty flares to lights now.

March 12, 2015:
	- Chris, Kyle, and Charlie solidified various features for the presentation:
		+ Added winning screen, win message, and functional buttons for proceeding, replaying, or leaving.
		+ Implemented Brenton's fan on the test level; applies force to anything in its trigger zone.
		+ GUI scales more nicely at different resolutions.
		+ Built the project into a presentable executable.

March 11, 2015:
	- Kyle added a death screen and a fancy countdown timer, as well as temporary icons to the HUD.
	- Charlie modified various GUI elements and imported the Copperplate font.
	- Brenton added a spawn platform.
	
March 10, 2015:
	- Jacob added:
		+ Modified Stage 1 to be an arrow rather than tear drop
		+ Modified Stage 2 to be more detailed:
			* Added borders around the edge of the stage
			* Added more detail to guardrails
			* Added "hidden" corridor inside central block
		+ Fixed and modified stage textures
			* Fixed the missing grass texture error
			* Re-mapped stages to optimize tiling
		+ Converted file format of stages (blend -> 3ds) to fix collision bugs
		+ Reorganized some model/texture assets

March 9, 2015:
	- Chris added a work-in-progress fancy finish line animation. Kyle got it sorta functional afterwards.
	- Brenton added fancy buttons and completely reworked the main menu.
	- Charlie added more functionality to the in-game pause menu GUI.
		+ Due to git merge shenanigans, the minor work on the controls submenu was lost.
	- Kyle added submenus to the pause menu GUI and cleaned up some other things.

March 4, 2015:
	- Charlie and Kyle transitioned the pause menu to use the Unity UI canvas.
	- Updated project to Unity 5. Tons of new changes result.
		+ Bugfixes: 
			* Spidercreep up certain steep walls.
			* Residual slowness after shrinking.
		+ New issues:
			* Ball very slowly moves after stopping on a flat surface.
			* Ball catches nonconvex floor mesh edges/vertices. Similar to http://answers.unity3d.com/questions/568974/sphere-collider-catching-edges-of-aligned-cubes.html but in 3D.
			* Quarter pipe mesh behaves mildly oddly in conjunction with booster panel, as if ramming it.
			* If shadows are enabled on level 2, the railing shadows aren't connected to the ground.

March 2, 2015:
	- Brenton and Charlie added Unity UI canvases to phase out old OnGUI scripts.

February 25, 2015:
	- Charlie, Chris, and Kyle tweaked camera behavior.
		+ Kyle found general case solution to solve camera problems and implemented it.

February 23, 2015:
	- Jacob revised level 2 and added guardrails.
	- Charlie, Chris, and Kyle added victory flames to finish line and began power up implementation.
		+ Current possible power ups are: Speedboost, Multijump, Superjump, Shrink/Grow, Ghost, Heliball
	- Kyle roughly implemented power up functions and sources with temporary particle effects.
		+ Testing level now has power up sources to play and test with. Also has a sky box because why not.

February 16, 2015:
	- Jacob added:
		+ Preliminary level 3 platform model
		+ Updated level 2 to include central obstacle
		+ Added updated marble model
	- Charlie, Chris, and Kyle continued work on level 1:
		+ Added kill zone boundary.
		+ Added spawn point.
		+ Spawn point keeps marble in place during level starting phase.
	- Kyle tweaked some things to make level creation and debugging easier:
		+ Created prefabs for kill zone, spawning pad, and finish line to easily drag them into new levels.
		+ Kill zone boundary is now visible in scene view (purposefully disappears when playing).
		+ Spawning pad now referred to by the GameMaster and locks the marble more neatly.
		+ GameMaster's game states now cooperate more and are easy to change via debug GUI.
		+ InputManager made neater, and now allows for adding debug controls for, well, debugging.
		+ Added decent default values to camera's orientation and positioning.

February 13, 2015:
	- Jacob added platform models for levels 1 and 2
	- Charlie, Chris, and Kyle put together a prototype of the level 1 scene.

February 11, 2015:
	- Charlie, Chris, and Kyle modified/patched jumping mechanics slightly.
		+ Charlie and Kyle fixed double application of jumping force.
		+ Chris added a jump check to accommodate new control handling.
	- Brenton added the finish/starting line model.
	- Charlie updated the GameMaster and added GUI object to scene.
	- Kyle set up input, GameMaster, and GUI for future ease of use:
		+ Revamped input so that most input is handled by the InputManager script.
		+ Added two scenes: Main Menu and Level 1 (currently empty).
		+ Hooked GameMaster into most scripts and gave it some control over the game.
		+ Added rudimentary GUIs for the main menu, in-game pausing, and the HUD.
		+ Added a debug non-spinning, base particle effect. Can be toggled off in the inspector.
		+ Various small tweaks, including some files being reorganized again.

February 9, 2015
	- Kyle added booster panels to provide short bursts of speed to marble.
	
February 8, 2015
	- Jacob added the initial marble texture/model as well as basic ramp models to assets/test level

February 6, 2015
	- Kyle and Charlie worked on finding normal vectors to the surface to modify jump behavior

February 5, 2015
	- Kyle added debugging tools and disabled jumping in the air

February 4, 2015
	- Charlie adjusted speed settings for the ball

February 2, 2015:
    - Kyle adjusted camera and ball controls

January 28, 2015:
    - Charlie created new Unity project and added git options that work with Unity
	- Chris added project to GitHub
	- Kyle created terrain, ball, and basic movement
