====================================================================================================
                                    ~ ~ ~ VERSION HISTORY ~ ~ ~
====================================================================================================

April 15, 2015:
	- Charlie updated the Super Jump tutorial level to be fully playable now.
		+ Kyle fixed first S-Jump source's badge rotation and changed sun angle to give more helpful shadows.
	- Brenton added a prototype of the Heliball tutorial level.
	- Kyle updated the ghost level so that the dozens of lights are not active simultaneously.
		+ The script created to do that can be used to enable/disable anything with a trigger.

April 14, 2015:
	- Charlie fully implemented the key rebinding script and the controls menu.

April 13, 2015:
	- Kyle modified a few things based on feedback:
		+ Ghost level has more lights, obstacle course platforms widened, foyer buff duration extended.
			* Jerry now constantly updates his y-coordinate to match the player's.
		+ Rough implementation of camera autorotation: moves (jitters) up when stuck against a wall now.
		+ Finish line now has the option to use an invisible black hole as its animation.

April 12, 2015:
	- Kyle added various tweaks and features:
		+ Updated finish line prefab to include Brentoncloth.
		+ Crudely implemented some of Chris's sounds, and added a few more.
		+ Added some modular/simple scripts for teleporting, adjusting rotation, and making textures slide.
		+ Added mockup for some sort of ghost level.
			* Added demonic ghost entity, nicknamed Jerry.

April 10, 2015:
	- Brenton gave life to the finish line cloth.
	- Chris added various sounds for a variety of situations.

April 9, 2015:
	- Kyle refactored, cleaned, improved, and implemented some code:
		+ Objects can now more easily add functionality to GameMaster's OnStart, OnPlay, and OnWin functions.
		+ Fixed key rebinding script to properly allow mouse input. Still does not properly detect the shift key.
		+ Added unpolished generic gravity zone script to allow different areas to exert different forces.
		
April 8, 2015:
	- Charlie implemented beginning functionality of key rebinding script.

April 6, 2015:
	- Brenton updated the funnel.
	- Charlie and Kyle implemented the functionality of the hover/heliball buff.
	- Kyle added ghostly objects that are only solid while ghosting. Also significantly upgraded ghost scripts.
	- Kyle added highly flexible tip spots that can be dragged onto a scene to give a player information.

April 3, 2015:
	- Kyle attempted to clean up the project.
	- Ghostable objects are now truly selectively permeable: nothing but the marble will get through.
	- Test level now has the following extra features:
		+ Black hole and a runway of anchored springy cylinders
		+ Ghost source and a ghostable wall, with a lil rigidcube for experimenting.
		+ Optional big screen TV.

April 2, 2015:
	- Jacob added a number of new assets and modified existing ones
		+ Power up badges (speed, ghost, generic)
			* Modelled and textured, not animated
		+ Reusable stage models:
			* Start platform
			* Straight platforms (short, mid, long)
			* Hard turn platforms (left and right)
			* Straight half-pipe path
		+ Fixed stage 2 center piece (was floating just above the stage)

April  1, 2015:
	- Charlie, Chris, and Kyle fixed a lighting issue on two levels.
	- Brenton added a funnel model and updated the spawn point model.
	- Kyle implemented a couple new features:
		+ Randomized death/win messages.
		+ Ghost powerup and its functionality.
		+ New level hazard: black hole.
		+ Silly sound for victory explosion.
	
March 31, 2015:
	- Kyle refactored marble and powerup code for extendability. Then extended it.
		+ Powerups can now completely overwrite marble's jumping and movement mechanics.
		+ Powerups can now disappear when collected, and will respawn when used up.

March 30, 2015:
	- Charlie added a prototype super jump tutorial level.
	- Charlie, Kyle, and Chris modified jumping so that powerups could change jumping trigger conditions.
		
March 26, 2015:
	- Kyle added a candidate speed boost tutorial level.

March 25, 2015:
	- Charlie added beginnings of Heliball powerup.
		+ Currently when active, marble falls more slowly.
	- Charlie and Kyle fixed some issues with jumping mechanics.
		+ Marble may now keep jumping automatically if the jump key is held down.
		+ There is a barely noticeable cooldown after standard jumping to restrict multijump.
		+ Fringe issues:
			* Marble may be unable to jump in some cases if it perfectly skids down wall and lands on floor if both share a collider.
			* If marble is in midair without having jumped first, the player gets an extra jump. Could be a feature?

March 24, 2015:
	- Kyle added a pointer to the finish line and revamped buff code.
		+ Adding new buffs should be easier.
		+ Can now hold on to buffs. Press F to use them.
		+ Multijump is now usable in midair, and has a source on the test level.

March 23, 2015:
	- Charlie, Chris, and Kyle added an indicator to the finish line that is visible at all times.
		
March 22, 2015:
	- Kyle cleaned some code, made some features less buggy, and added more debug options.
		+ Replaced debug state buttons with toggles that both display the current state and allow it to be changed.
		+ Added a debug slider for viewing the game at different framerates.
		+ Added an alternate, less intense victory animation for quicker debugging and playtesting.
		+ Added a debug cheaty "win" button.
		+ Made movement and some animations framerate independent.
			* Level 1 should now always be completable in just about 3 seconds regardless of machine.
		+ Imported some Unity standard effect assets; can add nifty flares to lights now.

March 12, 2015:
	- Chris, Kyle, and Charlie solidified various features for the presentation:
		+ Added winning screen, win message, and functional buttons for proceeding, replaying, or leaving.
		+ Implemented Brenton's fan on the test level; applies force to anything in its trigger zone.
		+ GUI scales more nicely at different resolutions.
		+ Built the project into a presentable executable.

March 11, 2015:
	- Kyle added a death screen and a fancy countdown timer, as well as temporary icons to the HUD.
	- Charlie modified various GUI elements and imported the Copperplate font.
	- Brenton added a spawn platform.
	
March 10, 2015:
	- Jacob added:
		+ Modified Stage 1 to be an arrow rather than tear drop
		+ Modified Stage 2 to be more detailed:
			* Added borders around the edge of the stage
			* Added more detail to guardrails
			* Added "hidden" corridor inside central block
		+ Fixed and modified stage textures
			* Fixed the missing grass texture error
			* Re-mapped stages to optimize tiling
		+ Converted file format of stages (blend -> 3ds) to fix collision bugs
		+ Reorganized some model/texture assets

March 9, 2015:
	- Chris added a work-in-progress fancy finish line animation. Kyle got it sorta functional afterwards.
	- Brenton added fancy buttons and completely reworked the main menu.
	- Charlie added more functionality to the in-game pause menu GUI.
		+ Due to git merge shenanigans, the minor work on the controls submenu was lost.
	- Kyle added submenus to the pause menu GUI and cleaned up some other things.

March 4, 2015:
	- Charlie and Kyle transitioned the pause menu to use the Unity UI canvas.
	- Updated project to Unity 5. Tons of new changes result.
		+ Bugfixes: 
			* Spidercreep up certain steep walls.
			* Residual slowness after shrinking.
		+ New issues:
			* Ball very slowly moves after stopping on a flat surface.
			* Ball catches nonconvex floor mesh edges/vertices. Similar to http://answers.unity3d.com/questions/568974/sphere-collider-catching-edges-of-aligned-cubes.html but in 3D.
			* Quarter pipe mesh behaves mildly oddly in conjunction with booster panel, as if ramming it.
			* If shadows are enabled on level 2, the railing shadows aren't connected to the ground.

March 2, 2015:
	- Brenton and Charlie added Unity UI canvases to phase out old OnGUI scripts.

February 25, 2015:
	- Charlie, Chris, and Kyle tweaked camera behavior.
		+ Kyle found general case solution to solve camera problems and implemented it.

February 23, 2015:
	- Jacob revised level 2 and added guardrails.
	- Charlie, Chris, and Kyle added victory flames to finish line and began power up implementation.
		+ Current possible power ups are: Speedboost, Multijump, Superjump, Shrink/Grow, Ghost, Heliball
	- Kyle roughly implemented power up functions and sources with temporary particle effects.
		+ Testing level now has power up sources to play and test with. Also has a sky box because why not.

February 16, 2015:
	- Jacob added:
		+ Preliminary level 3 platform model
		+ Updated level 2 to include central obstacle
		+ Added updated marble model
	- Charlie, Chris, and Kyle continued work on level 1:
		+ Added kill zone boundary.
		+ Added spawn point.
		+ Spawn point keeps marble in place during level starting phase.
	- Kyle tweaked some things to make level creation and debugging easier:
		+ Created prefabs for kill zone, spawning pad, and finish line to easily drag them into new levels.
		+ Kill zone boundary is now visible in scene view (purposefully disappears when playing).
		+ Spawning pad now referred to by the GameMaster and locks the marble more neatly.
		+ GameMaster's game states now cooperate more and are easy to change via debug GUI.
		+ InputManager made neater, and now allows for adding debug controls for, well, debugging.
		+ Added decent default values to camera's orientation and positioning.

February 13, 2015:
	- Jacob added platform models for levels 1 and 2
	- Charlie, Chris, and Kyle put together a prototype of the level 1 scene.

February 11, 2015:
	- Charlie, Chris, and Kyle modified/patched jumping mechanics slightly.
		+ Charlie and Kyle fixed double application of jumping force.
		+ Chris added a jump check to accommodate new control handling.
	- Brenton added the finish/starting line model.
	- Charlie updated the GameMaster and added GUI object to scene.
	- Kyle set up input, GameMaster, and GUI for future ease of use:
		+ Revamped input so that most input is handled by the InputManager script.
		+ Added two scenes: Main Menu and Level 1 (currently empty).
		+ Hooked GameMaster into most scripts and gave it some control over the game.
		+ Added rudimentary GUIs for the main menu, in-game pausing, and the HUD.
		+ Added a debug non-spinning, base particle effect. Can be toggled off in the inspector.
		+ Various small tweaks, including some files being reorganized again.

February 9, 2015
	- Kyle added booster panels to provide short bursts of speed to marble.
	
February 8, 2015
	- Jacob added the initial marble texture/model as well as basic ramp models to assets/test level

February 6, 2015
	- Kyle and Charlie worked on finding normal vectors to the surface to modify jump behavior

February 5, 2015
	- Kyle added debugging tools and disabled jumping in the air

February 4, 2015
	- Charlie adjusted speed settings for the ball

February 2, 2015:
    - Kyle adjusted camera and ball controls

January 28, 2015:
    - Charlie created new Unity project and added git options that work with Unity
	- Chris added project to GitHub
	- Kyle created terrain, ball, and basic movement